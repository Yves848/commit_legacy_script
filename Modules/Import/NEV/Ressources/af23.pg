CREATE OR REPLACE FUNCTION FCTCREATEaf23(CSVFILE text) RETURNS integer
AS $$
DECLARE af23exists BOOLEAN;
BEGIN
        SELECT EXISTS into af23exists (
           SELECT FROM information_schema.tables
           WHERE  table_schema = 'public'
           AND    table_name   = 'af23'
        );

        if af23exists then
           drop table af23;
        end if;
        
        CREATE TABLE public.af23
            (
       vnovendeur integer NOT NULL,
    vindex smallint,
    vnom text,
    vinitiale text,
    vcaisse_pharma smallint,
    vcaisse_loc smallint,
    vcumuls double precision[],
    vnbfactures smallint,
    vnbmois smallint,
    veuro text,
    vmotpasse text,
    vaccesms text,
    vprocessus text,
    vsupprime text,
    vlad_uid text,
    vlad_token text,
    vlad_password text,
    vlad_salt text,
    vlad_ident_date text,
    vlad_ident_heure text,
    updated_at timestamp without time zone DEFAULT now(),
    vrpps_nom text,
    vrpps_prenom text,
    vrpps_rpps text,
    vrpps_finess text,
    vrpps_codespecialite smallint,
    vrpps_raison_sociale text,
    vrpps_secteur_activite text,
    vrpps_savoirfaire text,
    vins_consultation text DEFAULT 'O'::character varying,
    vins_teleservices text DEFAULT 'O'::character varying,
    vins_superutilisateur text DEFAULT 'N'::character varying,
                CONSTRAINT af23_pkey PRIMARY KEY (vnovendeur)
            )
            WITH (
                OIDS = FALSE
            )
            TABLESPACE pg_default;

        execute 'COPY af23(
            vnovendeur,
vindex,
vnom,
vinitiale,
vcaisse_pharma,
vcaisse_loc,
vcumuls,
vnbfactures,
vnbmois,
veuro,
vmotpasse,
vaccesms,
vprocessus,
vsupprime,
vlad_uid,
vlad_token,
vlad_password,
vlad_salt,
vlad_ident_date,
vlad_ident_heure,
updated_at,
vrpps_nom,
vrpps_prenom,
vrpps_rpps,
vrpps_finess,
vrpps_codespecialite,
vrpps_raison_sociale,
vrpps_secteur_activite,
vrpps_savoirfaire,
vins_consultation,
vins_teleservices,
vins_superutilisateur
)
            from ''' || $1 || '''
            DELIMITER '';''
            CSV HEADER';

            return 0;
END;
$$ 
LANGUAGE PLPGSQL;
